package vistas;

import controladores.Controlador;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.Iterator;
import java.util.Observable;
import java.util.Observer;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import modelo.EstadoParticion;
import modelo.Particion;
import particionesdinamicas.ParticionesDinamicas;

/**
 *
 * @author Mauro Federico Lopez
 */
public class SimulacionMemoriaUI extends javax.swing.JFrame implements Observer {

    private Controlador controlador;

    /**
     * Creates new form SimulacionMemoriaUI
     */
    public SimulacionMemoriaUI() {
        initComponents();
        setLayout(new GridLayout(0,1));
        controlador = ParticionesDinamicas.getControlador();
        controlador.addObserver(this);
    }

    public void graficarSimulacion() {
        this.getContentPane().removeAll();
        JLabel labelSO = new JLabel("Sistema Operativo");
        labelSO.setBackground(new Color(255, 255, 255));
        labelSO.setHorizontalAlignment(SwingConstants.CENTER);
        labelSO.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        labelSO.setOpaque(true);
        getContentPane().add(labelSO);

        Iterator<Particion> i = controlador.obtenerPaticiones().iterator();
        while(i.hasNext()) {
            Particion p = i.next();
            JLabel label = new JLabel();
            if(p.getEstado().equals(EstadoParticion.OCUPADA)) {
                label.setBackground(new Color(255, 255, 255));
                label.setText("Proceso " + p.getProceso().getNombre() + " [" + p.getTamaño() + " Kb]");
            }
            else {
                label.setBackground(new Color(204, 204, 204));
                label.setText("[" + p.getTamaño() + " Kb]");
            }
            label.setHorizontalAlignment(SwingConstants.CENTER);
            label.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
            label.setOpaque(true);
            getContentPane().add(label);
        }
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Estado Memoria");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(200, 400));
        setMinimumSize(new java.awt.Dimension(200, 400));
        setName("Memoria");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulacionMemoriaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulacionMemoriaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulacionMemoriaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulacionMemoriaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new SimulacionMemoriaUI().setVisible(true);
            }
        });
    }

    @Override
    public void update(Observable o, Object arg) {
        graficarSimulacion();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
